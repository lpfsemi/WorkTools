<ui:UiPage
    x:Class="WorkTools.Views.Pages.DataPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WorkTools.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:WorkTools.Models"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml" 
    xmlns:plot="http://schemas.scottplot.net/2008/xaml/presentation"
    Title="DataPage"
    d:DataContext="{d:DesignInstance local:DataPage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    d:Background="{DynamicResource ApplicationBackgroundBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d">

    <Grid>
        <Grid.Resources>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Foreground" Value="WhiteSmoke"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="RosyBrown" Offset="0.5"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DockPanel VerticalAlignment="Top">
            <TextBlock Text="路径：" Width="50" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <Label Width="500" Height="25" BorderThickness="1" BorderBrush="LightGray" VerticalAlignment="Center" VerticalContentAlignment="Center"  Content="{Binding ViewModel.FilePath}" ToolTip="{Binding ViewModel.FilePath}"/>
            <Button x:Name="BtnSelectFilePath" Command="{Binding ViewModel.SelecteFilePathCommand, Mode=OneWay}"  Content="选择文件"/>

            <ui:ProgressRing MaxHeight="30"  IsIndeterminate="{Binding ViewModel.IsBusy,Mode=OneWay}"/>
            <Button x:Name="BtnToExcelXLSX" Margin="5,0" Width="60" Command="{Binding ViewModel.ConverToExcelXLSXCommand, Mode=OneWay}"  Content="To XLSX">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ViewModel.IsBusy}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="BtnToExcelXLS" Margin="5,0"  Width="60" Command="{Binding ViewModel.ConverToExcelXLSCommand, Mode=OneWay}"  Content="To XLS">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ViewModel.IsBusy}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </DockPanel>
        <ListView Height="100" ItemsSource="{Binding ViewModel.Datas}" Grid.Row="1"/>

        <GroupBox Header="数据采集" Grid.Row="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <ContentControl Content="{Binding ViewModel.PlotControl}"/>
                <StackPanel Grid.Column="1">
                    <GroupBox Header="Interval(ms)">
                        <ui:NumberBox Minimum="10" Value="{Binding ViewModel.Interval,Mode=TwoWay}" Maximum="6000" MaxLength="10" MaxDecimalPlaces="0" IsEnabled="True"/>
                    </GroupBox>
                    <GroupBox Header="Cached Count">
                        <ui:TextBox Text="{Binding ViewModel.Count}" IsReadOnly="True"/>
                    </GroupBox>
                    <Button x:Name="BtnStatAcquireData" Command="{Binding ViewModel.StartAcquireCommand}" Content="开始采集"/>
                    <Button x:Name="BtnStopAcquireData" Command="{Binding ViewModel.StopAcquireCommand}" Content="停止采集"/>
                    <Button x:Name="BtnSaveData" Command="{Binding ViewModel.SaveDataCommand}" Content="保存数据"/>
                    <Button x:Name="BtnClearCacheData" Command="{Binding ViewModel.ClearCacheDataCommand}" Content="清空缓存"/>

                    <Button x:Name="BtnConfigChart"  Command="{Binding ViewModel.SaveChartConfigCommand}" CommandParameter="{Binding ViewModel.ConfigVisibility}" Content="{Binding ViewModel.BtnTitle}"/>
                    <ui:DataGrid ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding ViewModel.SignalInfos}" Visibility="{Binding ViewModel.ConfigVisibility}"  CanUserSortColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeColumns="False" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Param" Binding="{Binding Name,Mode=OneTime}"/>
                            <DataGridCheckBoxColumn Header="Visiable" Binding="{Binding IsVisiable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataGrid.Columns>
                    </ui:DataGrid>

                </StackPanel>
            </Grid>
        </GroupBox>
    </Grid>
</ui:UiPage>
